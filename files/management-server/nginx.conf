user www-data;
worker_processes auto; # number of cores
pid /run/nginx.pid;

events {
  worker_connections 8096;
  multi_accept on;
  use epoll;
}

http {
  sendfile on;
  tcp_nopush on;
  keepalive_timeout 65;
  server_tokens off;

  tcp_nodelay on;
  types_hash_max_size 2048;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  gzip on;
  gzip_disable "msie6";

  include /etc/nginx/conf.d/*.conf;

  # this is required to proxy Grafana Live WebSocket connections.
  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  upstream grafana {
    server localhost:3000;
  }

  server {
    listen 80;

    location / {
      auth_basic "Contest Admin Area";
      auth_basic_user_file /etc/nginx/contestadmin_users.htpasswd;
      root /srv/contestweb;
    }
    # Grafana server configuration for proxying
    location /grafana/ {
      rewrite  ^/grafana/(.*)  /$1 break;
      proxy_set_header        Host $host;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header        X-Forwarded-Proto $scheme;

      # Expose grafana
      proxy_pass http://grafana;
      proxy_read_timeout  90;
    }
    location /grafana/api/live/ {
        rewrite  ^/grafana/(.*)  /$1 break;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $http_host;
        proxy_pass http://grafana;
    }

  }
}
