#!/bin/bash
if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root"
   exit 1
fi

if [ -f /icpc/setup-complete ] && [ "$1" != "-f" ] && [ "$1" != "--force" ]; then
  # nothing to do, setup is already done(but still let it run with -f or --force)
  echo "Already configured. Run with -f or --force to reconfigure"
  exit
fi
WGET="wget -e use_proxy=no --timeout=5"

# Printers
NUMPRINTERS=0
function add_printer() {
  case $2 in
    ps)
      DRIVER="drv:///sample.drv/generic.ppd"
      ;;
    pcl)
      DRIVER="drv:///sample.drv/generpcl.ppd"
      ;;
    *) # Default to whatever they entered
      DRIVER="$2"
      ;;
  esac
  #-o media=letter
  #-o media=a4
  lpadmin -p Printer${NUMPRINTERS} -v socket://$1 -E -m $DRIVER
  lpadmin -p Printer${NUMPRINTERS} -c ContestPrinter
  cupsenable Printer${NUMPRINTERS}
  accept Printer${NUMPRINTERS}
  let NUMPRINTERS++
}

# whiptail redirection trick(3>&1 1>&2 2>&3) taken from:
# http://stackoverflow.com/a/1970254/841300
whiptail --title "ICPC First Time Setup" --msgbox "Please answer the following questions to finalize the configuration of your environment.\n\nYou can re-run this script later by executing '/icpc/scripts/icpc_setup -f' as root." 20 60

TEAMNAME=$(cat /icpc/TEAM)
TEAMNAME="${TEAMNAME:-team}"  # Set default to team
TEAMNAME=$(whiptail --title "Team Name" --inputbox "Please enter the team's identifier(e.g. team503)\n\nThis will be shown on the team's background and at the top of each printed page" 10 60 $TEAMNAME 3>&1 1>&2 2>&3)
echo $TEAMNAME > /icpc/TEAM
convert /icpc/wallpaper.png -gravity center -pointsize 100 -stroke '#000C' -strokewidth 2 -annotate 0 $TEAMNAME -stroke none -fill white -annotate 0 $TEAMNAME /icpc/teamWallpaper.png

whiptail --title "Configure Automatic Login" --yesno "Do you want to configure the DOMjudge login credentials for the team?\n\nChoosing no will clear any existing login credentials." 10 60
DJAUTOLOGIN=$?
if [ $DJAUTOLOGIN -eq 0 ]; then # they click yes
  # Load existing values
  DJTEAM=$(cat /etc/squid/autologin.conf | awk '/X-DOMjudge-Login/{print $3}' | tr -d '"')
  DJPASS=$(cat /etc/squid/autologin.conf | awk '/X-DOMjudge-Pass/{print $3}' | tr -d '"' | base64 -d)
  DJTEAM="${DJTEAM:-$TEAMNAME}"  # Set default to team name if unset

  DJTEAM=$(whiptail --title "DOMjudge Login" --inputbox "Please enter the team's DOMjudge login" 10 60 $TEAMNAME 3>&1 1>&2 2>&3)
  DJPASS=$(whiptail --title "DOMjudge Password" --passwordbox "Please enter the team's DOMjudge password" 10 60 $DJPASS 3>&1 1>&2 2>&3)

  #base64 encode the password to prevent any issues
  b64pass=$(echo -n "$DJPASS" | base64)

  cat > /etc/squid/autologin.conf <<EOF
request_header_add X-DOMjudge-Autologin true autologin
request_header_add X-DOMjudge-Login "$DJTEAM" autologin
request_header_add X-DOMjudge-Pass "$b64pass" autologin
EOF
else
  # clear out any existing credentials
  echo "# Placeholder" > /etc/squid/autologin.conf
fi
echo "Reconfiguring squid, please wait a moment..."
# make sure the contestant user can't read the credentials
chmod 640 /etc/squid/autologin.conf
chown root:root /etc/squid/autologin.conf

# restart squid to pick up on the changes(start then stop in case squid isn't running)
service squid stop
service squid start

whiptail --title "Configure Printers" --yesno "Do you want to configure any printers at this time?\n\nNo changes will be made to the printing system if you choose no." 10 60
CONFIG_PRINTERS=$?
DO_PRINTPAGE=0
if [ $CONFIG_PRINTERS -eq 0 ]; then # they click yes
  # are there any existing printers? if so, do we want to clear them?
  lpstat -v 2>/dev/null| grep Printer0 2>&1 >/dev/null
  if [ $? -eq 0 ]; then
    whiptail --title "Remove existing printers?" --yesno "Do you want to remove all existing printers?" 10 60 --defaultno
    if [ $? -eq 0 ]; then
      # Clear out all old printers
      for PRINTER in $(lpstat -v 2>/dev/null| cut -d ' ' -f 3 | tr -d ':')
      do
        lpadmin -x $PRINTER
      done
      lpadmin -x ContestPrinter
    fi
  fi

  # Load printers from config file if present(and they choose to)
  whiptail --title "Load printers from the web?" --yesno "Do you want to load printers from the web?" 10 60
  if [ $? -eq 0 ]; then
    $WGET -O/tmp/sites.cfg http://configs.cloudcontest.org/sites >/tmp/downloaderror 2>&1
    mapfile -t </tmp/sites.cfg SITES
    if [ ${#SITES[@]} -gt 0 ]; then
      SITE=$(whiptail --title "Select your contest site" --menu "Choose your school to load printer configurations from.\n\nPlease contact kj@ubergeek42.com to have your site added to this menu." 18 60 5 "${SITES[@]}" 3>&1 1>&2 2>&3)
      # Try to download the site config file
      $WGET -O/tmp/printers.cfg http://configs.cloudcontest.org/${SITE}_printers.cfg >>/tmp/downloaderror 2>&1
      if [ $? -ne 0 ]; then
        whiptail --title "Failed to load config file" --msgbox "Failed to download configuration file. Press enter to review the error message(then press q to dismiss it). Setup will continue normally afterwards." 20 60
        less /tmp/downloaderror
      else
        # config downloaded successfully!
        SUMMARY="The following printers were added successfully:\n\n"
        while read printerip driver
        do
          SUMMARY="${SUMMARY}    $printerip with driver $driver\n"
          add_printer $printerip $driver
        done < /tmp/printers.cfg
        whiptail --title "Loaded printers from config file" --msgbox "$SUMMARY" 20 60
        rm -f /tmp/printers.cfg
      fi
    else
      whiptail --title "Failed to load list of sites" --msgbox "Failed to download list of sites. Press enter to review the error message(then press q to dismiss it). Setup will continue normally afterwards." 20 60
      less /tmp/downloaderror
    fi
    rm -f /tmp/downloaderror
  fi


  # Query for printers to add manually
  while true; do
  	printerIP=$(whiptail --title "Printer Configuration" --inputbox "Please enter your printer ip address/hostname.\n\nLeave this blank to finish adding printers." 10 60 3>&1 1>&2 2>&3)
  	if [ -z "$printerIP" ]; then
      break;
  	else
      PRINTDRV=$(whiptail --title "Select a driver" --radiolist "Please choose the driver you want to use with the printer:\n    $printerIP\n\nNote: Use space to select, enter to continue" 15 60 2 ps "Generic PostScript Printer" on pcl "Generic PCL Laser Printer" off 3>&1 1>&2 2>&3)
      add_printer $printerIP $PRINTDRV
  	fi
  done

  # Check if we have any printers present, if so make sure we enable the class and set it as default
  # also ask about printing a test page
  lpstat -v 2>/dev/null | grep Printer0 2>&1 >/dev/null
  if [ $? -eq 0 ]; then
  	lpadmin -d ContestPrinter
  	cupsenable ContestPrinter
  	accept ContestPrinter

    whiptail --title "Print Test Page?" --yesno "Would you like to send a test page to the printer?\n\n" 10 60 --defaultno
    if [ $? -eq 0 ]; then
      DO_PRINTPAGE=1
    fi
  fi
fi
# Run self test
clear
su - -c /icpc/scripts/self_test | tee /icpc/self_test_report

if [ "$DO_PRINTPAGE" -eq 1 ]; then
  su - contestant -c '/icpc/scripts/printfile /icpc/self_test_report'
  echo
  echo "Test page sent to printer..."
fi
rm -f /icpc/self_test_report

read -p "Press [enter] to continue"

# make sure we only run once
touch /icpc/setup-complete
