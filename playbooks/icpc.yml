---
- name: create icpc directory
  file: path=/icpc state=directory

- name: copy icpc scripts
  copy: src=files/scripts dest=/icpc mode=0755

- name: add a supported_languages file
  copy:
    dest: /icpc/supported_languages
    content: |
      {% for l in languages %}
      {{ l }}
      {% endfor %}


- name: write out the contest id (if specified)
  copy:
    dest: /icpc/CONTEST
    content: "{{ contest_id }}"
  when: contest_id|default('')|length > 0

- name: create printfile symlink(to match world finals image)
  file: src=/icpc/scripts/pcpr dest=/icpc/scripts/printfile state=link

- name: set default papersize to letter
  copy: dest=/etc/papersize content="letter\n" mode=0644

- name: setup PATH variable
  copy:
    dest: /etc/profile.d/icpc_path.sh
    content: |
      export PATH="/icpc/scripts:$PATH"

- name: copy icpc default wallpaper
  copy: dest=/icpc/wallpaper.png src=files/wallpaper.png

- name: set timezone
  community.general.timezone:
    name: "{{ icpc_timezone }}"

# ICPC tools we need
- name: install ICPC tools we need
  apt:
    state: present
    pkg:
      - ufw
      - imagemagick
      - git
      # - ntp # we use systemd-timesyncd instead (and installing ntp will break that)
      - cups
      - cups-bsd
      - enscript
      - python3-typing-extensions # needed for firstboot script

      # experimental programs to support showing a banner image to all contestants
      - feh # to display fullscreen images
      - wmctrl # can set always on top, plus check if it's still the active window and restart it if not (e.g. ctrl+alt+left/right swap desktops)
      - xdotool # to detect if it's still on top/other things?
      - python3-xlib  # maybe we'll write our own xorg fullscreen thing to replace the above 3 things...

- name: stop/disable cups-browsed from autodiscovering printers
  service: name=cups-browsed state=stopped enabled=no

- name: copy icpc default wallpaper
  copy: dest=/icpc/wallpaper.png src=files/wallpaper.png
- name: Copy autostart desktop entry to set wallpaper
  copy: src=files/icpc_autostart.desktop dest=/etc/xdg/autostart/icpc_autostart.desktop

- name: create icpcadmin group
  group: name='icpcadmin' state='present'
- name: create icpcadmin user
  user: name='icpcadmin' comment="ICPC Local Admin" group='icpcadmin' groups='sudo,adm,lpadmin' password='{{ icpcadmin_pass | password_hash('sha512') }}' shell='/bin/bash'

- name: create contestant group
  group: name='contestant' state='present'
- name: create contestant user (with empty/blank password)
  user: name='contestant' group='contestant' groups='lpadmin' password='$1$salty$lOyh/41oDtq.J4v0Lltp4.' shell='/bin/bash'
  notify:
      - clear user password

# This will get cleared when the user is re-created
- name: create gitconfig for contestant(to make updating the home directory easier)
  copy:
    dest: /home/contestant/.gitconfig
    owner: contestant
    group: contestant
    content: |
      [user]
      	email = contestant@icpcenv
      	name = icpcenv

- name: copy ssh ca
  copy:
    src: files/secrets/server_ca.pub
    dest: /etc/ssh/ca.pub
    mode: 0644

- name: configure ssh ca to be enabled for allowing users to log in
  copy:
    content:
      TrustedUserCAKeys /etc/ssh/ca.pub
    dest: /etc/ssh/sshd_config.d/trusted-user-ca.conf
    mode: 0644

- name: configure ssh ca to be trusted for host verification
  shell: echo "@cert-authority * $(cat /etc/ssh/ca.pub)" >>/etc/ssh/ssh_known_hosts

- name: Install a set of host keys that are signed by the ssh CA
  copy:
    src: files/secrets/contestant.icpcnet.internal_{{ item }}
    dest: /etc/ssh/ssh_{{ item }}
  with_items:
    - host_ed25519_key
    - host_ed25519_key.pub
    - host_ed25519_key-cert.pub

- name: sshd host certificate
  copy:
    content: |
      HostKey /etc/ssh/ssh_host_ed25519_key
      HostCertificate /etc/ssh/ssh_host_ed25519_key-cert.pub
    dest: /etc/ssh/sshd_config.d/ssh_host_cert.conf
    mode: 0644
  notify: restart ssh


- name: create gitconfig for icpcadmin(to make updating the home directory easier)
  copy:
    dest: /home/icpcadmin/.gitconfig
    owner: icpcadmin
    group: icpcadmin
    content: |
      [user]
      	email = icpcadmin@icpcenv
      	name = icpcenv

- name: disable proxy for icpcadmin
  copy: src=files/pam_environment dest=/home/icpcadmin/.pam_environment

- name: use polkit to disable mounting anything
  copy: src=files/99-deny-polkit-mount.pkla dest=/etc/polkit-1/localauthority/50-local.d/disable-mount.pkla mode=0644 owner=root group=root

- name: create team reset group
  group: name='teamreset' state='present'
- name: create team reset user
  user: name='teamreset' comment="Clear Team Account" group='teamreset' groups='sudo,adm,lpadmin' createhome=no password='{{icpcadmin_pass | password_hash('sha512') }}' shell='/bin/bash'
- name: make home folder/autostart path
  file: state=directory path=/home/teamreset/.config/autostart owner=teamreset group=teamreset
- name: create autostart file
  copy: src=files/teamreset.desktop dest=/home/teamreset/.config/autostart/teamreset.desktop

- name: setup sudo for the admin
  copy:
    dest: /etc/sudoers.d/icpcadmins
    mode: 0440
    content: |
      # icpcadmin can run any command without a password
      icpcadmin ALL=NOPASSWD: ALL
      teamreset ALL=NOPASSWD: ALL

- name: set up firstboot configuration
  copy: src=files/firstboot.service dest=/etc/systemd/system/firstboot.service

- name: enable firstboot service
  service: name=firstboot enabled=yes

- name: check for ICPC partition
  shell: blkid -L "ICPC"
  register: icpc_partition
  ignore_errors: true
  failed_when: false

- name: if there is an icpc partition
  when: icpc_partition.rc == 0
  block:
  - name: create mountpoint
    file: path=/mnt/usbdrive state=directory
  - name: mount fat32 partition
    mount: >
      name=/mnt/usbdrive
      src='LABEL=ICPC'
      fstype=vfat
      opts="defaults,uid=contestant,gid=contestant"
      state=present

