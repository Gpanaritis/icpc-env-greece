---
- name: create icpc directory
  file: path=/icpc state=directory

- name: copy icpc scripts
  copy: src=files/scripts dest=/icpc mode=0755

- name: create printfile symlink(to match world finals image)
  file: src=/icpc/scripts/pcpr dest=/icpc/scripts/printfile state=link

- name: set default papersize to letter
  copy: dest=/etc/papersize content="letter\n" mode=0644

- name: setup PATH variable
  copy:
    dest: /etc/profile.d/icpc_path.sh
    content: |
      export PATH="/icpc/scripts:$PATH"

- name: copy icpc default wallpaper
  copy: dest=/icpc/wallpaper.png src=files/wallpaper.png

- name: check current timezone
  shell: cat /etc/timezone
  register: current_timezone

- name: set timezone
  copy: content={{ icpc_timezone }}
        dest=/etc/timezone
        owner=root
        group=root
        mode=0644
  when: current_timezone.stdout != icpc_timezone
  notify:
      - update timezone

# ICPC tools we need
- name: install ICPC tools we need
  apt:
    state: present
    pkg:
      - ufw
      - imagemagick
      - git
      # - ntp # we use systemd-timesyncd instead (and installing ntp will break that)
      - cups
      - cups-bsd
      - enscript

- name: copy local git repos to server
  synchronize:
    src: home_dirs/{{item}}/.git
    dest: /tmp/{{item}}.git
  with_items:
    - contestant
    - admin

- name: remove existing skel directory
  file: path=/etc/skel state=absent
- name: setup user skeleton directory
  git: dest=/etc/skel repo=file:///tmp/contestant.git

- name: setup admin skeleton directory
  git: dest=/home/icpcadmin repo=file:///tmp/admin.git
  notify:
      - fix permissions

- name: create contestant group
  group: name='contestant' state='present'
- name: create contestant user
  user: name='contestant' group='contestant' groups='lpadmin' password='$1$salty$lOyh/41oDtq.J4v0Lltp4.' shell='/bin/bash'
  notify:
      - clear user password

# This will get cleared when the user is re-created
- name: create gitconfig for contestant(to make updating the home directory easier)
  copy:
    dest: /home/contestant/.gitconfig
    owner: contestant
    group: contestant
    content: |
      [user]
      	email = contestant@icpcenv
      	name = icpcenv

- name: create icpcadmin group
  group: name='icpcadmin' state='present'
- name: create icpcadmin user
  user: name='icpcadmin' comment="ICPC Local Admin" group='icpcadmin' groups='sudo,adm,lpadmin' password='{{ icpcadmin_pass | password_hash('sha512') }}' shell='/bin/bash'
- name: set up authorized keys for icpcadmin
  authorized_key: user='icpcadmin' key="{{ lookup('file', 'configs/ssh_key.pub') }}"

- name: create gitconfig for icpcadmin(to make updating the home directory easier)
  copy:
    dest: /home/icpcadmin/.gitconfig
    owner: icpcadmin
    group: icpcadmin
    content: |
      [user]
      	email = icpcadmin@icpcenv
      	name = icpcenv

- name: disable proxy for icpcadmin
  copy: src=files/pam_environment dest=/home/icpcadmin/.pam_environment

- name: use polkit to disable mounting anything
  copy: src=files/99-deny-polkit-mount.pkla dest=/etc/polkit-1/localauthority/50-local.d/disable-mount.pkla mode=0644 owner=root group=root

- name: create team reset group
  group: name='teamreset' state='present'
- name: create team reset user
  user: name='teamreset' comment="Clear Team Account" group='teamreset' groups='sudo,adm,lpadmin' createhome=no password='{{icpcadmin_pass | password_hash('sha512') }}' shell='/bin/bash'
- name: make home folder/autostart path
  file: state=directory path=/home/teamreset/.config/autostart owner=teamreset group=teamreset
- name: create autostart file
  copy: src=files/teamreset.desktop dest=/home/teamreset/.config/autostart/teamreset.desktop

- name: setup sudo for the admin
  copy:
    dest: /etc/sudoers.d/icpcadmins
    mode: 0440
    content: |
      # icpcadmin can run any command without a password
      icpcadmin ALL=NOPASSWD: ALL
      teamreset ALL=NOPASSWD: ALL

- name: set up firstboot configuration
  copy: src=files/firstboot.service dest=/etc/systemd/system/firstboot.service

- name: enable firstboot service
  service: name=firstboot enabled=yes

- name: create mountpoint
  file: path=/mnt/usbdrive state=directory
- name: mount fat32 partition
  mount: >
    name=/mnt/usbdrive
    src='LABEL=ICPC'
    fstype=vfat
    opts="defaults,uid=contestant,gid=contestant"
    state=present
